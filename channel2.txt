            {/* Channel 2 */}
            <div className="flex flex-col items-center gap-3 bg-zinc-900 rounded-lg p-3 border border-red-900/20 shadow-inner shadow-red-900/10">
              <div className="text-sm font-semibold text-red-200">Channel 2 (Line)</div>
              
              {/* Dynamics Processing Buttons - Channel 2 */}
              <div className="flex justify-center items-center gap-3 mb-3 w-full bg-gray-800 p-2 rounded-md">
                {/* Compressor */}
                <Button 
                  variant="outline" 
                  className="h-10 w-10 bg-gray-700 hover:bg-gray-600 text-white/90 border border-gray-600 shadow-sm"
                  title="Compressor"
                  onClick={() => openDynamicsDialog('compressor')}
                >
                  <svg viewBox="0 0 24 24" className="h-5 w-5 fill-current" xmlns="http://www.w3.org/2000/svg">
                    <path d="M3 3h18v18H3V3zm4 4v10h10V7H7z" opacity="0.5" />
                    <path d="M7 12h10v5H7v-5z" />
                  </svg>
                </Button>
                
                {/* Limiter */}
                <Button 
                  variant="outline" 
                  className="h-10 w-10 bg-gray-700 hover:bg-gray-600 text-white/90 border border-gray-600 shadow-sm"
                  title="Limiter"
                  onClick={() => openDynamicsDialog('limiter')}
                >
                  <svg viewBox="0 0 24 24" className="h-5 w-5 fill-current" xmlns="http://www.w3.org/2000/svg">
                    <path d="M3 3h18v18H3V3zm4 4v10h10V7H7z" opacity="0.5" />
                    <path d="M7 16h10v1H7v-1z" />
                  </svg>
                </Button>
                
                {/* EQ */}
                <Button 
                  variant="outline" 
                  className="h-10 w-10 bg-gray-700 hover:bg-gray-600 text-white/90 border border-gray-600 shadow-sm"
                  title="Equalizer"
                  onClick={() => openDynamicsDialog('eq')}
                >
                  <svg viewBox="0 0 24 24" className="h-5 w-5 fill-current" xmlns="http://www.w3.org/2000/svg">
                    <path d="M4 19h16v2H4zM4 3h16v2H4z" />
                    <path d="M7 7h2v8H7zm4 2h2v6h-2zm4-1h2v7h-2z" />
                  </svg>
                </Button>
                
                {/* DeEsser */}
                <Button 
                  variant="outline" 
                  className="h-10 w-10 bg-gray-700 hover:bg-gray-600 text-white/90 border border-gray-600 shadow-sm"
                  title="De-Esser"
                  onClick={() => openDynamicsDialog('deesser')}
                >
                  <svg viewBox="0 0 24 24" className="h-5 w-5 fill-current" xmlns="http://www.w3.org/2000/svg">
                    <path d="M15 8H5v2h10zm0 4H5v2h10z" />
                    <path d="M5 16h10v2H5z" opacity="0.5" />
                    <path d="M19 6l-2 12h-2l2-12z" />
                  </svg>
                </Button>
                
                {/* Noise Gate */}
                <Button 
                  variant="outline" 
                  className="h-10 w-10 bg-gray-700 hover:bg-gray-600 text-white/90 border border-gray-600 shadow-sm"
                  title="Noise Gate"
                  onClick={() => openDynamicsDialog('gate')}
                >
                  <svg viewBox="0 0 24 24" className="h-5 w-5 fill-current" xmlns="http://www.w3.org/2000/svg">
                    <path d="M4 4h16v16H4z" opacity="0.2" />
                    <path d="M8 4v6h8V4h2v16h-2v-6H8v6H6V4z" />
                  </svg>
                </Button>
              </div>
              
              {/* Level meters, controls and fader side by side */}
              <div className="flex gap-4 h-[10rem]">
                {/* Left and right meters with control buttons now on the left */}
                <div className="flex">
                  {/* Buttons moved to the left of the meters */}
                  <div className="flex flex-col mr-3 h-full justify-center gap-3">
                    <Button
                      size="sm"
                      onClick={toggleLine}
                      className={`w-14 h-10 rounded-md ${lineActive ? 'bg-red-600 hover:bg-red-700' : 'bg-zinc-800 hover:bg-zinc-700'}`}
                      disabled={connectionStatus !== 'connected'}
                    >
                      {lineActive ? <Volume2 className="h-5 w-5 mr-1" /> : <VolumeX className="h-5 w-5 mr-1" />}
                      {lineActive ? <span className="text-xs">ON</span> : <span className="text-xs">OFF</span>}
                    </Button>
                    
                    <Button
                      size="sm" 
                      variant="outline"
                      className="w-14 h-10 rounded-md border-zinc-700 bg-zinc-800"
                      disabled={connectionStatus !== 'connected'}
                    >
                      <Headphones className="h-5 w-5" />
                    </Button>
                  </div>
                  
                  {/* Audio level meters */}
                  <div className="flex gap-1">
                    {/* Left channel level */}
                    <div className="relative flex flex-col-reverse w-6 h-[calc(100%+40px)] bg-zinc-800 rounded-sm overflow-hidden">
                      <div 
                        className="w-full bg-gradient-to-t from-red-700 via-red-600 to-red-500 transition-all duration-100" 
                        style={{ height: `${lineActive ? (externalAudioLevels ? externalAudioLevels.left : internalAudioLevels.left) : 0}%` }}
                      />
                      {/* Level markers */}
                      <div className="absolute right-0 top-0 h-[calc(100%+40px)] w-full flex flex-col justify-between pointer-events-none">
                        <div className="w-full border-t border-red-500/50 h-0"></div>
                        <div className="w-2/3 self-end border-t border-red-500/30 h-0"></div>
                        <div className="w-full border-t border-yellow-500/50 h-0"></div>
                        <div className="w-2/3 self-end border-t border-yellow-500/30 h-0"></div>
                        <div className="w-full border-t border-green-500/50 h-0"></div>
                        <div className="w-2/3 self-end border-t border-green-500/30 h-0"></div>
                        <div className="w-full border-t border-green-500/50 h-0"></div>
                      </div>
                    </div>
                    
                    {/* Right channel level */}
